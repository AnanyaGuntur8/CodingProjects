public class BankAccounts {
    //create instance var
    public String accNum;
    public String name;
    private double balance;

    //constructor
    public BankAccounts(String accNum, String name){
        this.accNum = accNum;
        this.name = name;
        int balance = 0;
    }
    //Overload the constructor
    public BankAccounts(String accNum, String name, double initialDeposit){
        this.accNum = accNum;
        this.name = name;
        this.balance = initialDeposit;
    }
    //get account number
    public String getAccNum(){
        return this.accNum;
    }
    //get balance
    public double getBalance(){
        return this.balance;
    }


    //withdraw money
    public String withDraw(double amount){
        if(amount>0.0 && this.balance>=amount){
            this.balance -=amount;
            String details = (this.balance+ "is your remaing balance "+ "withdrew+ "+ amount+ " for" + this.name);
            return details;
        }
        return "cannot withdraw";
    }
    public String depositMoney(double amount){
        if(amount>0){
            this.balance +=amount;
            String details = (this.balance+ " is your remaing balance "+ "deposited+ "+ amount+ " for " + this.name);
            return details;
        }
        return "Invalid Input";
    
    }   
    public String transferMoney(BankAccounts from, BankAccounts to, double moneyTransfer){
        //what are the conditions to be met.. if the amount wanting to transfer is within the 
        //range of the account balance then the user is free to to transfer money 

        if ( moneyTransfer <=from.balance){
            from.withDraw(moneyTransfer);
            to.depositMoney(moneyTransfer);
            return to.name + " " +to.balance;
            
        }
        String errorHandling = "Not enough money in bankAccount";
        return errorHandling;
    }
    public BankAccounts getAccountDetails(){
        BankAccounts database = new BankAccounts(accNum, name, balance);
        System.out.println("Account Number: " + this.getAccNum());
            System.out.println("Account Holder: " + this.name);
            System.out.println("Balance: " + this.getBalance());
        return database;
    }
    public static void main(String[] args){
        BankAccounts person1 = new BankAccounts("1234", "John", 12.0);
        BankAccounts person2 = new BankAccounts("1347", "Sally", 34.0);
        
        System.out.println(person1.getAccountDetails());
        System.out.println(person2.getAccountDetails());
        System.out.println();
        System.out.println(person2.withDraw(3.00));
        System.out.println();
        System.out.println(person1.depositMoney(2.00));
        System.out.println();
        System.out.println(person1.transferMoney(person1, person2,5.0));

        
    }

}
